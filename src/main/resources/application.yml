server:
  port: 9000
  address: "0.0.0.0"

spring:

  output:
    ansi:
      enabled: ALWAYS

  datasource:
    url: "jdbc:mysql://localhost:3306/?logger=com.mysql.cj.log.StandardLogger&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=true&trustServerCertificate=true"
    username: c123user
    password: c123456789
    driver-class-name: com.mysql.cj.jdbc.Driver

logging:

  level:
    root: WARN
    com.c123.MySQLConsole: DEBUG
    org.springframework.core: WARN
    org.springframework.web: INFO

  pattern:
    console: "%green(%d) %highlight(%5p) %magenta([%t]) %cyan(%logger{36}.%M) - %msg%n"
    file:    "%d %5p [%t] %logger.%M - %msg%n"
    dateformat: "yyyy-MM-dd HH:mm:ss.SSS"

  file:
    name: log/app.log
    max-size: 20MB
    max-history: 10

application:

  password:
    min_length: 8
    max_length: 1024
    mock_value: VERYVERYVERYLONGPASSWORD
    symbols: 01!@#$iopasdf%^WERTYUI&*:5138;`~234qwertyughjklzx(){OPASDFG}<>?/cvbnm567QHJKLZXCVBNM89

  environment:
    length: 10
    symbols: "0124315609457981279978243042819758120473278604241068720862162431274"

  pattern:
    db: ca_[[ENVID]]_db
    user: ca_[[ENVID]]_user

  sql:
    create_db: create database IF NOT EXISTS [[DBNAME]]
    create_user: CREATE USER '[[USER]]'@'[[HOST]]' IDENTIFIED BY '[[PASSWORD]]' REQUIRE SSL
    get_env: select * from environments.mts where id = ?
    get_all_envs: select * from environments.mts order by create_date DESC
    insert_env: INSERT INTO environments.mts (id, env_mysql_user, env_mysql_db, create_date, status, host_ip, password) VALUES(?,?,?,?,?,?,?)
    drop_user: DROP USER '[[USER]]'@'[[HOST]]'
    drop_db: DROP DATABASE [[DBNAME]]
    delete_env: DELETE FROM environments.mts WHERE id=[[ENVID]]
    get_connections: SELECT usr user, COUNT(1) Connections FROM (SELECT user usr,LEFT(host,LOCATE(':',host) - 1) hst FROM information_schema.processlist WHERE user NOT IN ('system user','root')) A GROUP BY usr
    change_host: RENAME USER [[USER]]@[[OLD_HOST]] TO [[USER]]@[[NEW_HOST]]
    update_host: update environments.mts set host_ip = ? where id = ?
    user_grant_max: GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, INDEX, ALTER, EXECUTE, CREATE ROUTINE, TRIGGER, REFERENCES ON [[DBNAME]].* TO '[[USER]]'@'[[HOST]]'
    user_grant_min: grant execute, select, insert, update, delete on [[DBNAME]].* to '[[USER]]'@'[[HOST]]'
    revoke_privileges: revoke all privileges, grant option from '[[USER]]'@'[[HOST]]'
    update_status: update environments.mts set status=? where id=?
    truncate: truncate table environments.mts
    change_password: ALTER USER '[[USER]]'@'[[HOST]]' IDENTIFIED BY '[[PASSWORD]]'
    update_Password: update environments.mts set password = ? where id = ?